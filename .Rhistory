scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings)) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count), color = "YlGn") +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count), color = "Date") +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient()
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Date)) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient()
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings)) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Date)) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings)) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Date), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings)) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Count), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings)) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Count), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings, color = Earnings), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "blue", high = "green")
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Count), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings, color = Earnings), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "lightblue", high = "green")
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Count), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings, color = Earnings), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "lightblue", high = "green") +
theme(panel.background = element_rect(fill = 'black', colour = 'green'), panel.grid.minor = element_blank())
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Count), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings, color = Earnings), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "lightblue", high = "green") +
theme(panel.background = element_rect(fill = 'grey'), panel.grid.minor = element_blank())
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Count), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings, color = Earnings), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "lightblue", high = "green") +
theme(panel.background = element_rect(fill = 'white'), panel.grid.minor = element_blank())
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Count), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings, color = Earnings), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "lightblue", high = "green") +
theme(panel.background = element_rect(colour = 'green'), panel.grid.minor = element_blank())
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Count), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings, color = Earnings), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Count), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings, color = Earnings), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Count), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings, color = Earnings), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "yellow", high = "green")
library(tidyverse)
library(ggplot2)
library(stringr)
library(knitr)
library(lubridate)
lime_data <- read.csv("lime_data.csv")
lime_data$Date <- mdy(lime_data$Date)
ggplot(lime_data) +
geom_point(aes(x = Date, y = Count, color = Count), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Data by Date", x = "Date", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
lime_data <- lime_data |>
mutate(Weekday = wday(Date, label = TRUE)) |>
mutate(YearWeek = week(Date)) |>
mutate(Earnings = 0.235 * 10 * Count)
ggplot(lime_data) +
geom_col(aes(x = Weekday, y = Count, fill = Weekday)) +
labs(title = "Lime Data by Weekday", x = "Weekday", y = "Count") +
scale_fill_brewer(palette = "YlGn")
ggplot(lime_data) +
geom_point(aes(x = Date, y = Earnings, color = Earnings), show.legend = FALSE) +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
labs(title = "Lime Date - Earnings by Day", x = "Date", y = "Earnings ($)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_gradient(low = "black", high = "green")
install.packages('shiny')
library(shiny)
runExample("01_hello")
runApp("App-1", display.mode = "showcase")
runApp("App-1", display.mode = "showcase")
runApp("App-1.1")
runApp("App-1.1", display.mode = "showcase")
runApp("App-1.1", display.mode = "showcase")
runApp("App-1.1", display.mode = "showcase")
runApp("App-1.1", display.mode = "showcase")
runApp("App-1.1", display.mode = "showcase")
runApp("App-1.1", display.mode = "showcase")
runApp("App-1.1", display.mode = "showcase")
library(shiny)
runExample("01_hello")
runApp("App-1.1", display.mode = "showcase")
install.packages("shiny")
runApp("App-1.1", display.mode = "showcase")
install.packages("shiny")
runApp("App-1.1", display.mode = "showcase")
library(shiny)
runApp("App-1.1", display.mode = "showcase")
install.packages("shiny")
library(shiny)
runApp("App-1.1", display.mode = "showcase")
runExample("01_hello")      # a histogram
runExample("02_text")       # tables and data frames
runExample("03_reactivity") # a reactive expression
runExample("04_mpg")        # global variables
runExample("03_reactivity") # a reactive expression
runExample("04_mpg")        # global variables
runExample("05_sliders")    # slider bars
runApp("Hello-App.R")
runApp('Week_13/Hello_App.R')
runApp('Week_13/Hello_App.R')
runExample("01_hello")      # a histogram
runApp("App-1.1", display.mode = "showcase")
install.packages("shiny")
runApp("App-1.1", display.mode = "showcase")
install.packages("shiny")
runApp('Week_13/Widget_App.R')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
View(data)
# read csv, put into dataframe
permits = read.csv("Issued_Construction_permits_20241102.csv")
View(permits)
permits$Applied.Date = as.Date(permits$Applied.Date)
permits$Issued.Date = as.Date(permits$Issued.Date)
permits$Expires.Date = as.Date(permits$Expires.Date)
permits$Completed.Date = as.Date(permits$Completed.Date)
permits$Status.Date = as.Date(permits$Status.Date)
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
# choose which columns to work on
permits <- permits |>
select(Permit.Class.Mapped, Work.Class, Applied.Date, Issued.Date, Day.Issued, Calendar.Year.Issued, Fiscal.Year.Issued, Status.Current, Expires.Date, Completed.Date, Original.Address.1, Original.Zip)
# import libraries
library(ggplot2)
library(tidyverse)
library(knitr)
library(RColorBrewer)
library(lubridate)
library(stringr)
# read csv, put into dataframe
permits = read.csv("Issued_Construction_permits_20241102.csv")
# refactor the columns for better data analysis
permits$Applied.Date = as.Date(permits$Applied.Date)
permits$Issued.Date = as.Date(permits$Issued.Date)
permits$Expires.Date = as.Date(permits$Expires.Date)
permits$Completed.Date = as.Date(permits$Completed.Date)
# permits$Status.Date = as.Date(permits$Status.Date)
# head(permits, 1)
# choose which columns to work on
permits <- permits |>
select(Permit.Class.Mapped, Work.Class, Applied.Date, Issued.Date, Day.Issued, Calendar.Year.Issued, Fiscal.Year.Issued, Status.Current, Expires.Date, Completed.Date, Original.Address.1, Original.Zip)
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
runApp('Week_13/Homework8')
shiny::runApp('Week_14/Project3')
shiny::runApp('Week_13/Homework8')
